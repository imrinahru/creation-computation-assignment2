// Team Angelic, Jennifer, Rina
// Rain Prayer Performance
// Main interactions: microphone input volume brings down rain
// Reference: Audio Visualization with p5.js ( https://js6450.github.io/audio-viz/index.html and https://p5js.org/reference/#/p5/userStartAudio

//Daniel Shiffmans mic input demo https://editor.p5js.org/lavalamper/sketches/Ofj2cz4Ji

//code by Angelic

let mic;
let micLevel = 0;
let micMultiplier = 10;   // Increase sensitivity by a lot
let drops = [];
let numDrops = 18; //sacred number in Judaism

// angelic's poem based from Tefillat Geshem
let prayerLines = [
  "Original poem based on the Tefillat Geshem" ,
  "the prayer for rain that Ashkenazi Jews recite on Shemini Atzeret.",
  "          ------       ",
  "'our spirits, our source, may our shared intention be heard.",
  "for your sake, for ours, do not hold back water.",
  "we will give to you our word. we will cherish the water",
  "we will undivide the beloved;",
  "we will sweeten the bitter of water;",
  "we will unspill the water of pain between us.",
  "do not hold back your water.",
  "let us sing blessings of possibility.",
  "goddexxes of abundance, priestess' of joy!",
  "who causes the wind to blow and the rain to fall.",
  "may we be renewed with rolling mouths of liquid",
  "washing ourselves, bathing ourselves, purifying until we are only sacred.",
  "may our wells be plentiful, may our life be plentiful, may our water hear our calls.'"
];

function setup() {
  createCanvas(windowWidth, windowHeight);
  
  // Create a new p5.AudioIn() instance
  mic = new p5.AudioIn();
  
  // Enable microphone with tap
  enableMicTap("every word of the prayer poem brings the rain down. prayer is more powerful together.");
  
  lockGestures();
  
  noCursor();
   textAlign(CENTER, CENTER);
  textFont('Georgia');

 // Create raindrops with random sizes and starting positions. Getting this part to work was a mix of me + gpt5
  for (let i = 0; i < numDrops; i++) {
    drops.push({
      x: random(width),
      y: random(-height, height),
      size: random(30, 150),
      speed: random(0.01, 0.3),
      shimmer: random(0.5, 1.5)
    });
  }
}

// based off of this tutorial in the git hub example. mic = new p5.AudioIn(); mic.start(); let level = mic.getLevel();

function draw() {
  background(0);
 // Get mic level if started
  if (mic.enabled) {
    micLevel = mic.getLevel() * micMultiplier;
    micLevel = constrain(micLevel, 0, 1);
  } else {
    micLevel = 0;
  }

  noStroke();

  // Draw all raindrops. Getting the shapes right was generated by GPT-5
  for (let d of drops) {
    // Shimmer effect
    let alpha = map(sin(frameCount * 0.05 * d.shimmer), -1, 1, 120, 220);

    fill(180, 220, 255, alpha);

    let dropW = d.size * 0.6;
    let dropH = d.size;

    let cx = d.x;
    let cy = d.y;

    beginShape();
    vertex(cx, cy - dropH / 2);
    bezierVertex(cx + dropW / 2, cy - dropH / 4,
                 cx + dropW / 2, cy + dropH / 4,
                 cx, cy + dropH / 2);
    bezierVertex(cx - dropW / 2, cy + dropH / 4,
                 cx - dropW / 2, cy - dropH / 4,
                 cx, cy - dropH / 2);
    endShape(CLOSE);

    // Fall speed affected by mic volume. from the amplitude learning in the tutorial. let level = amp.getLevel(); ellipse(width/2, height/2, level * width/2);
    d.y += d.speed + micLevel * 18; 

    // Loop raindrops to top
    if (d.y > height + dropH / 2) {
      d.y = -dropH / 2;
      d.x = random(width);
      d.size = random(30, 150); // optional: vary size again
    }
  }
  // Draw static prayer text in the middle
  fill(200, 220, 255, 220);
  textSize(10);
  textLeading(24); //https://p5js.org/reference/p5/textLeading/

  let startY = height / 4; // position top of prayer text
  for (let i = 0; i < prayerLines.length; i++) {
    text(prayerLines[i], width / 2, startY + i * 24);
  }

}

// iPhone tap to enable mic // https://p5js.org/reference/p5/touchStarted/
function touchStarted() {
  if (!mic.enabled) {
    userStartAudio().then(() => mic.start());
  }
  return false; // prevent scrolling
}
//https://p5js.org/reference/p5/windowResized/
function windowResized() {
  resizeCanvas(windowWidth, windowHeight);
}